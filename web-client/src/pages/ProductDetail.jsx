import React, { useEffect, useState } from 'react';
import { useParams, Link } from 'react-router-dom';
import dayjs from 'dayjs';
import duration from 'dayjs/plugin/duration';
import ProductImageGallery from '../components/ProductImageGallery';

dayjs.extend(duration);

/**
 * Trang chi ti·∫øt s·∫£n ph·∫©m ‚Äì hi·ªán d√πng d·ªØ li·ªáu fake.
 * Khi backend s·∫µn s√†ng ch·ªâ c·∫ßn thay th·∫ø ph·∫ßn fetch th·∫≠t.
 */

export default function ProductDetail() {
  const { productId } = useParams();

  /* ---------------------  FAKE DATA  --------------------- */
  const [product, setProduct] = useState({
    productId,
    productName: 'G·∫•u B√¥ng Pikachu 30cm',
    productPrice: 300000,
    discountPercent: 20,
    discountedPrice: 240000,
    isOnSale: 1,
    endDate: dayjs().add(1, 'day').toISOString(),
    imageUrl: [
      'https://picsum.photos/id/237/800/800',
      'https://picsum.photos/id/238/800/800',
      'https://picsum.photos/id/239/800/800',
      'https://picsum.photos/id/240/800/800',
    ],
    description:
      'G·∫•u b√¥ng si√™u d·ªÖ th∆∞∆°ng, ch·∫•t b√¥ng m·ªãn, an to√†n tuy·ªát ƒë·ªëi cho tr·∫ª em.\n\n‚Ä¢ K√≠ch th∆∞·ªõc: 30cm.\n‚Ä¢ Ch·∫•t li·ªáu: B√¥ng PP cao c·∫•p, v·∫£i nhung m·ªÅm.\n‚Ä¢ Xu·∫•t x·ª©: Vi·ªát Nam.\n‚Ä¢ B·∫£o h√†nh: 12 th√°ng ƒë∆∞·ªùng ch·ªâ.\n',
    brandName: 'PikaToys',
    categoryName: 'G·∫•u b√¥ng',
    sku: 'PIKA-30-Y',
    stock: 42,
  });

  /* S·∫£n ph·∫©m li√™n quan FAKE */
  const [related, setRelated] = useState([
    {
      productId: 'r1',
      productName: 'G·∫•u B√¥ng Eevee 25cm',
      productPrice: 250000,
      imageUrl: 'https://via.placeholder.com/300x300?text=Eevee',
      isOnSale: 0,
    },
    {
      productId: 'r2',
      productName: 'G·∫•u B√¥ng Charmander 35cm',
      productPrice: 320000,
      discountPercent: 15,
      discountedPrice: 272000,
      isOnSale: 1,
      endDate: dayjs().add(3, 'day').toISOString(),
    },
    {
      productId: 'r3',
      productName: 'G·∫•u B√¥ng Bulbasaur 28cm',
      productPrice: 280000,
      imageUrl: 'https://via.placeholder.com/300x300?text=Bulbasaur',
      isOnSale: 0,
    },
  ]);

  /* Cam k·∫øt v√† l∆∞u √Ω FAKE */
  const commitments = [
    {
      title: '100% ch√≠nh h√£ng',
      desc: 'S·∫£n ph·∫©m ƒë·∫ßy ƒë·ªß ho√° ƒë∆°n, tem VAT tr·ª±c ti·∫øp t·ª´ nh√† s·∫£n xu·∫•t.',
    },
    {
      title: 'ƒê·ªïi tr·∫£ 7 ng√†y',
      desc: 'H·ªó tr·ª£ ƒë·ªïi tr·∫£ mi·ªÖn ph√≠ n·∫øu c√≥ l·ªói do NSX ho·∫∑c giao nh·∫ßm.',
    },
    {
      title: 'Giao h√†ng h·ªèa t·ªëc',
      desc: 'N·ªôi th√†nh TP.HCM 2h, t·ªânh th√†nh 1‚Äì3 ng√†y.',
    },
  ];

  const notes = [
    'Gi√° tr√™n ch∆∞a bao g·ªìm ph√≠ v·∫≠n chuy·ªÉn (t√≠nh t·∫°i trang thanh to√°n).',
    'S·∫£n ph·∫©m c·∫ßn gi·∫∑t tay, tr√°nh m√°y s·∫•y nhi·ªát cao ƒë·ªÉ gi·ªØ ƒë·ªô b·ªÅn.',
    'M√†u s·∫Øc c√≥ th·ªÉ ch√™nh l·ªách 5% do √°nh s√°ng khi ch·ª•p.',
  ];

  /* ---------------------  COUNTDOWN  --------------------- */
  const [secondsLeft, setSecondsLeft] = useState(0);

  useEffect(() => {
    if (product.isOnSale) {
      const calc = () =>
        Math.max(0, dayjs(product.endDate).diff(dayjs(), 'second'));
      setSecondsLeft(calc());

      const interval = setInterval(() => {
        setSecondsLeft(calc());
      }, 1000);

      return () => clearInterval(interval);
    }
  }, [product]);

  const dur = dayjs.duration(secondsLeft, 'seconds');
  const [mainImage, setMainImage] = useState(product.imageUrl[0]);
  const countdown =
    secondsLeft > 0
      ? `${Math.floor(dur.asDays())} ng√†y ${dur
          .hours()
          .toString()
          .padStart(2, '0')}:${dur.minutes().toString().padStart(2, '0')}:${dur
          .seconds()
          .toString()
          .padStart(2, '0')}`
      : 'H·∫øt h·∫°n';

  /* ---------------------  JSX  --------------------- */
  return (
    <div className="max-w-7xl mx-auto px-4 py-10">
      <div className="grid grid-cols-1 md:grid-cols-3 gap-10">
        {/* ·∫¢nh */}
        <ProductImageGallery images={product.imageUrl} />

        {/* Th√¥ng tin */}
        <div className="md:col-span-1 flex flex-col gap-6">
          <div>
            <h1 className="text-3xl font-bold mb-2">{product.productName}</h1>
            <p className="text-gray-500 mb-3">
              Th∆∞∆°ng hi·ªáu:{' '}
              <span className="font-medium">{product.brandName}</span> | M√£ SP:{' '}
              <span className="font-medium">{product.sku}</span>
            </p>

            {/* Gi√° */}
            <div className="flex items-end space-x-3 mb-3">
              {product.isOnSale ? (
                <>
                  <span className="text-red-600 text-3xl font-bold">
                    {product.discountedPrice.toLocaleString()}‚Ç´
                  </span>
                  <span className="line-through text-gray-500 text-lg">
                    {product.productPrice.toLocaleString()}‚Ç´
                  </span>
                  <span className="bg-red-100 text-red-500 px-2 py-0.5 rounded text-sm">
                    -{product.discountPercent}%
                  </span>
                </>
              ) : (
                <span className="text-2xl text-gray-800 font-semibold">
                  {product.productPrice.toLocaleString()}‚Ç´
                </span>
              )}
            </div>

            {/* ƒê·∫øm ng∆∞·ª£c */}
            {product.isOnSale && (
              <div className="mb-4 text-orange-600 font-medium">
                üî• ∆Øu ƒë√£i c√≤n l·∫°i: {countdown}
              </div>
            )}

            {/* Ch·ªçn s·ªë l∆∞·ª£ng */}
            <div className="flex items-center space-x-2 mb-6">
              <label htmlFor="qty" className="text-gray-700 font-medium">
                S·ªë l∆∞·ª£ng:
              </label>
              <input
                id="qty"
                type="number"
                min="1"
                max={product.stock}
                defaultValue={1}
                className="w-20 border rounded p-2"
              />
              <span className="text-gray-500 text-sm">
                (C√≤n {product.stock} s·∫£n ph·∫©m)
              </span>
            </div>

            <button className="bg-red-500 text-white px-8 py-3 rounded hover:bg-red-600 transition uppercase tracking-wide font-semibold">
              Th√™m v√†o gi·ªè h√†ng
            </button>
          </div>
        </div>
        {/* Cam k·∫øt */}
        <div className="bg-gray-50 p-4 rounded shadow-sm">
          <h2 className="font-semibold mb-3 text-lg">Cam k·∫øt b√°n h√†ng</h2>
          <ul className="space-y-2 list-disc ml-5 text-gray-700 text-sm">
            {commitments.map((c) => (
              <li key={c.title}>
                <span className="font-medium">{c.title}:</span> {c.desc}
              </li>
            ))}
          </ul>
          <h2 className="font-semibold mb-3 mt-3 text-lg">
            L∆∞u √Ω khi mua h√†ng
          </h2>
          <ul className="list-disc ml-6 space-y-2 text-gray-700">
            {notes.map((n) => (
              <li key={n}>{n}</li>
            ))}
          </ul>
        </div>
      </div>

      {/* M√¥ t·∫£ chi ti·∫øt */}
      <div className="mt-12">
        <h2 className="text-2xl font-bold mb-4">M√¥ t·∫£ s·∫£n ph·∫©m</h2>
        <pre
          className="whitespace-pre-wrap leading-relaxed text-gray-700 bg-gray-50 p-4 rounded"
          style={{ fontFamily: 'inherit' }}
        >
          {product.description}
        </pre>
      </div>

      {/* S·∫£n ph·∫©m li√™n quan */}
      <div className="mt-12">
        <h2 className="text-2xl font-bold mb-6">S·∫£n ph·∫©m li√™n quan</h2>
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
          {related.map((r) => (
            <Link
              key={r.productId}
              to={`/products/detail-product/${r.productId}`}
              className="block border rounded-lg p-4 shadow hover:shadow-md transition"
            >
              <img
                src={r.imageUrl}
                alt={r.productName}
                className="w-full h-48 object-cover rounded mb-3"
              />
              <h4 className="font-semibold mb-1 line-clamp-2 min-h-[40px]">
                {r.productName}
              </h4>
              {r.isOnSale ? (
                <>
                  <span className="text-red-600 font-bold mr-2">
                    {r.discountedPrice.toLocaleString()}‚Ç´
                  </span>
                  <span className="line-through text-sm text-gray-500">
                    {r.productPrice.toLocaleString()}‚Ç´
                  </span>
                </>
              ) : (
                <span className="text-gray-800 font-semibold">
                  {r.productPrice.toLocaleString()}‚Ç´
                </span>
              )}
            </Link>
          ))}
        </div>
      </div>
    </div>
  );
}
